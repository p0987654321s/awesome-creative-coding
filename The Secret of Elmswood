#include <SFML/Graphics.hpp>

class Scene {
public:
    virtual void update(float deltaTime) = 0;
    virtual void draw(sf::RenderWindow &window) = 0;
};

class OpeningScene : public Scene {
    sf::Texture backgroundTexture;
    sf::Sprite backgroundSprite;
public:
    OpeningScene() {
        backgroundTexture.loadFromFile("opening_background.png");
        backgroundSprite.setTexture(backgroundTexture);
    }

    void update(float deltaTime) override {
        // Update logic for opening scene
    }

    void draw(sf::RenderWindow &window) override {
        window.draw(backgroundSprite);
    }
};

class MainScene : public Scene {
    sf::Texture characterTexture;
    sf::Sprite characterSprite;
    float characterSpeed;
public:
    MainScene() {
        characterTexture.loadFromFile("main_character.png");
        characterSprite.setTexture(characterTexture);
        characterSpeed = 100.0f; // Pixels per second
    }

    void update(float deltaTime) override {
        characterSprite.move(characterSpeed * deltaTime, 0);
    }

    void draw(sf::RenderWindow &window) override {
        window.draw(characterSprite);
    }
};

enum class SceneType {
    OPENING, MAIN, END
};

int main() {
    // Create the main window
    sf::RenderWindow window(sf::VideoMode(800, 600), "Animation Film");

    SceneType currentScene = SceneType::OPENING;
    OpeningScene openingScene;
    MainScene mainScene;

    sf::Clock clock;
    float frameTime = 1.0f / 24.0f;  // 24 frames per second
    float elapsedTime = 0.0f;

    while (window.isOpen()) {
        float deltaTime = clock.restart().asSeconds();
        elapsedTime += deltaTime;

        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed)
                window.close();
        }

        window.clear();

        switch (currentScene) {
            case SceneType::OPENING:
                openingScene.update(deltaTime);
                openingScene.draw(window);
                // Transition to next scene based on conditions
                if (elapsedTime > 3.0f) // Example condition to transition after 3 seconds
                    currentScene = SceneType::MAIN;
                break;
            case SceneType::MAIN:
                mainScene.update(deltaTime);
                mainScene.draw(window);
                break;
            case SceneType::END:
                // End scene logic
                break;
        }

        window.display();
    }

    return 0;
}
